const Schema = require("./schema.js");
var TimeStamped = new Schema({
        created: ['timestamp', ['DEFAULT CURRENT_TIMESTAMP']],
    });
console.log("TimeStamped.methods",TimeStamped.methods);
var TrackedAccess = TimeStamped
    .fields({
        last_access: ['timestamp' ],
    })
    .procs({
        updateAccessTime() {
            return this.table
                .query(`update '${this.name}' set last_access=CURRENT_TIMESTAMP`)
                .then(() => x)
        }
    });
console.log("trackedAccess",TrackedAccess);
var AutoTrackAccess = TrackedAccess
    .methods({
        create(name, db) {
            return new TableInterface
                .methods(this.procedures.o)
                .afterAll(function() {
                    var args = [...arguments];
                    var s = args.pop();
                    var v = args.pop();
                    return v.then((x) => this.updateAccessTime());
                })(name, this);
        }
    });
module.exports = {
    AutoTrackAccess :    new AutoTrackAccess(),
    TimeStamped     :    TimeStamped,
    TrackedAccess   :    TrackedAccess,
}
