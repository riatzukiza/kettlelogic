const AutoId = require("./autoid.js");
const is = require("../../functional/predicates.js");
const timekeeping = require("./AutoTimestamp.js");
/**
 * a template for a user table.
 * */
const STATUS = {
    ONLINE: 0,
    OFFLINE: 1,
    IDLE: 2,
    AWAY: 3,
    BUSY: 4
}
var User = AutoId
    .merge(timekeeping.AutoTrackAccess)
    .fields({
        password: ['varchar(32)'],
        email: ['varchar(128)'],
        username: ['varchar(32)'],
        status: ['tinyint']
    })
    .constraints([
        'UNIQUE(email)'
    ])
    .procs({
        login(email, password) {
            console.log("login attempt", email, password);
            return this.table
                .selectWhere({
                    email: email
                })
                .then((result) => {
                    console.log("DB LOGIN RESULTS", result);
                    var user = result.rows[0];
                    if (is.undefined(user.password)) {
                        console.log("user doesn't exist");
                        throw new Error("user does not exist");
                    } else if (result.rows[0].password === password) {
                        console.log("user exists and passwords match", result.rows[0]);
                        return this.table
                            .update({
                                status: STATUS.ONLINE
                            }, {
                                id: result.rows[0].id
                            })
                            .then(() => user);
                    } else {
                        console.log("wrong password");
                        throw new Error("incorrect password ");
                    }
                });
        },
        logout(email) {
            return this.table.update({
                status: STATUS.OFFLINE
            }, {
                email: email
            });
        },
        signup(creds) {
            console.log("this.table", this.table);
            return this
                .table
                .selectWhere({
                    email: creds.email
                })
                .then((result) => {
                    if (result.rows.length > 0) {
                        throw new Error("user exists");
                    }
                    return this.add(creds);
                });

        }
    });
User.STATUS = STATUS;
module.exports = User;
