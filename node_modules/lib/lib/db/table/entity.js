var Evented = require("../../events/EventInterface.js");
var obj = require("../../wrappers/object.js");
var TableEntity = function(schema,constraints) {
    return Evented
        .Constructor(function SQLTableEntity(interface,values) {
            Evented.call(this);
            this._interface = interface;
            this._map = new Map();
            this._id = values.id;

            obj.mask(values).forEach((x,k) => this._map.set(k,x));

            this._schema.forEach((a,k) =>
                Object.defineProperty(this,k,{
                    get:function() {
                        this.get(k)
                        return this._map.get(k)
                    },
                    set:function(v) {
                        this.set(k,v)
                    }
                }));
        })
        .evented({
            get:function(name) {
                return this._interface.getById(this.id)
                    .then((r) => {
                        var value = r.rows[0][name]
                        this._map.set(name,value);
                        return value;
                    });
            },
            set:function(name,value) {
                return this._interface.setById(this.id,name,value)
                    .then(() => {
                        this._map.set(name,value);
                    })
            }
        })
        .value("_schema",schema)
        .value("_constraints",constraints);
}
