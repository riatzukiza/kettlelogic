var Route = require("./route.js");
var Inode = require("../../filesystem/Inode.js");
var Path = require("path");
var HttpRoute = Route
        .Constructor(function() {
            Route.call(this);
        })
        .fluent({
            startRequest:function(req,res) {
                this.start({
                    req:req,
                    res:res,
                },[req,res]);
            },
            redirect:function(url) {
                return this.then(function(client,args) {
                    client.req.redirect(url);
                    client.redirectUrl = url;
                    return client;
                });
            },
            usePath:function(f) {
                return this.then(function(client,args) {
                    client.path = client.req.url;
                    return client;
                });
            },
            getString:function() {
                this.then(function(client,args){
                    return new Promise(function(resolve,reject) {
                        client.string = "";
                        client.req
                            .on("data",function(d) {
                                client.string += d;
                            })
                            .on("end",function() {
                                resolve(client);
                            })
                            .on("error",function(err) {
                                client.err = err;
                                reject(client);
                            });
                    });
                });
            },
            getJSON:function() {
                this.getString()
                    .then(function(client) {
                        client.json = JSON.parse(client.string);
                        return client;
                    });
            },
            serveFiles:function(rootPath) {
                return this
                    .usePath()
                    .then(function(client) {
                        var p = Path.join(rootPath,client.path);
                        console.log("serving",p);
                        return Inode.get(p)
                            .then(function(file) {
                                client.file = file;
                                file.pipe(client.res);
                            })
                            .catch(err => {
                                client.res.send("404 not found");
                            });

                    });
            }
        });
module.exports = HttpRoute;
