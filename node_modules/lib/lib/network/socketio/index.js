var HttpServer = require("../http/server.js");
var Evented = require("../../events/EventInterface.js");
var socketio = require("socket.io");
var Path = require("path");

var SocketIOServer = Evented
        .Constructor(function SocketIOServer(http) {
            Evented.call(this);
            var self = this;
            this.namespaces = new Map();
            this._http = new Evented(http)
                .on("*",function(name) {
                    var args = [...arguments].slice(1);
                    self.emit("/http/"+name,...args)
                });
            this.namespaces.set("/",this._io = new Evented(socketio(http))
                                .on("*",function(name) {
                                    var args = [...arguments].slice(1);
                                    self.emit("/io/"+name,...args)
                                }));
        })
        .fluent({
            namespace:function(name) {
                var self = this;
                this.namespaces
                    .set(name,new Evented(this._io.of(name))
                         .on("*",function(event) {
                             var args = [...arguments].slice(1);
                             self.emit("/io"+name+"/"+event,...args)
                         }));
            },
        });
function emitNamespace(s,name) {
    return function(event) {
        var args = [...arguments].slice(1);
        s.emit(Path.join("/io",(name === "/"?"":name),event),...args);
    };
}
var NameSpace = SocketIOServer
        .Constructor(function SocketIONamespace(s,name) {
            Evented.call(this);
            this._io = new Evented(s._io.of(name))
                .on("*",emitNamespace(s,name));

        });
module.exports = SocketIOServer;
